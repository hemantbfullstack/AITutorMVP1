Goal: When a student asks to “draw” or “show” diagrams (e.g., triangles, graphs), the app should render visuals, not just text. Implement:
1) a Shapes (Triangles) renderer in React (SVG),
2) chat → tools routing for drawings,
3) optional Wolfram image plotting.

A) Frontend – Shapes module (Triangles)
- Add a new tab inside Math Tools called “Shapes”.
- Create a React component `TriangleGallery.tsx` that renders SVG diagrams for:
  - Equilateral, Isosceles (acute), Scalene (acute), Right-angled, Obtuse.
- For each:
  * Draw triangle with labeled vertices A,B,C.
  * Label sides a,b,c opposite respective vertices.
  * Show angle arcs at A,B,C with approximate measures.
  * Add a short caption of properties (equal sides/angles, right angle at …, etc).
- Add a `TriangleDrawer.tsx` that can draw a specific triangle by:
  * Variant param: { type: "equilateral" | "isosceles" | "scalene" | "right" | "obtuse" }
  * Or by vertices: { A:[x,y], B:[x,y], C:[x,y] }
  * Auto-scale to fit SVG viewBox and center on panel.
  * Utility: compute side lengths and angles from coordinates; render labels.

- In the Shapes tab:
  * Section 1: “Triangle Gallery” → render 5 variants side-by-side (responsive).
  * Section 2: “Custom Triangle” → inputs for coordinates or quick pick (equilateral, right 3-4-5, obtuse sample). Button “Draw”.

- Add “Export PNG” on each SVG (use canvas export).

B) Frontend – Chat → Draw routing
- In the chat client, implement lightweight intent detection on the user message BEFORE sending to server:
  * If message contains keywords like: draw, show, triangle, diagram, shape, equilateral, isosceles, scalene, right triangle, obtuse, “plot y=”, “graph y=”, etc.
  * Then emit a UI action:
    - For triangle keywords with no coordinates → open Math Tools → Shapes tab → scroll to Triangle Gallery and highlight it.
    - For specific triangle types (equilateral/isoceles/right/etc) → open Shapes tab and call TriangleDrawer with that variant.
    - For explicit vertices “triangle with vertices (x1,y1),(x2,y2),(x3,y3)” → call TriangleDrawer with those points.
    - For “plot/graph y= …” → open Math Tools → Graphs tab and prefill the function input, then render.
- Still send the message to the tutor for explanation, but do NOT say “I cannot draw”. Instead, show the drawing panel and reply with a short explanation referencing the diagram.

- Add small pill under tutor messages when a render happens: “Rendered: Triangle (equilateral)” or “Rendered: Graph y=…”.

C) Backend – Wolfram image plotting (optional)
- Ensure POST /api/tools/wolfram supports returning image pods when present.
- Add a helper on the frontend Graphs tab: “Get Wolfram Plot Image” that calls the wolfram route and shows the returned image below the interactive graph.
- If WOLFRAM_APP_ID is missing, hide Wolfram image button; graph still works via Plotly/Desmos.

D) System prompt adjustments (server)
- Update the tutor system prompt to prefer visuals:
  “If the user requests a diagram or graph, respond concisely AND trigger the UI drawing tools. Do not state ‘I cannot create graphs.’ Provide a short textual guide while the client renders the diagram.”
- Return a small metadata object from the server alongside the text when possible:
  e.g., { uiAction: { type: "triangle", variant: "equilateral" } } or { uiAction:{ type:"graph", func:"sin(x)", range:[-6.28,6.28]} }.
  The client should honor this if present (even if local keyword detection already did it).

E) Tests (add to README and run now)
- Ask: “Can you show/draw me different shapes of triangles?” → Shapes tab opens; gallery renders; tutor adds a short explanation.
- Ask: “Draw an equilateral triangle of side 5 cm.” → Shapes tab opens; `TriangleDrawer` renders equilateral; tutor explains properties and how side relates to height.
- Ask: “Plot y = x^2 - 3x + 2” → Graphs tab opens and renders; tutor explains features (roots, vertex). If Wolfram key set, ‘Get Wolfram Plot Image’ also works.
- Ask: “Draw a triangle with vertices (0,0), (4,0), (1,3)” → Custom triangle renders with lengths and angles labeled.

F) UX polish
- Add a small toast: “Opened Shapes → Triangle Gallery” when the UI auto-routes.
- Allow user to pin the Shapes panel next to chat (split view).
- Ensure math labels (angles) use KaTeX where needed.

Deliverables:
- Shapes (Triangles) tab with gallery + custom drawer.
- Chat auto-routes drawing/graph requests to the right panel and renders.
- Tutor no longer claims it cannot draw; it shows visuals and gives concise commentary.
- Optional Wolfram plot image retrieval integrated.
